name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nodejs-ai-assistant

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: nodejs-ai-assistant/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      env:
        USE_MOCKS: true
        STREAM_API_KEY: dummy_stream_api_key
        STREAM_API_SECRET: dummy_stream_api_secret
        OPENAI_API_KEY: dummy_openai_api_key
        TAVILY_API_KEY: dummy_tavily_api_key

    - name: Run build check
      run: npm run start --dry-run || npx tsc --noEmit

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: react-stream-ai-assistant

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: react-stream-ai-assistant/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test:run

    - name: Run build check
      run: npm run build

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Install frontend dependencies
      run: |
        cd react-stream-ai-assistant
        npm ci

    - name: Run linting
      run: |
        cd react-stream-ai-assistant
        npm run lint

  # DEPLOYMENT JOBS (Commented out - require secrets configuration)
  # Uncomment and configure secrets in repository settings to enable
  
  # deploy-frontend-vercel:
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   needs: [frontend-tests, lint]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: react-stream-ai-assistant
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   
  #   - name: Deploy to Vercel
  #     uses: amondnet/vercel-action@v25
  #     with:
  #       vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #       vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #       vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #       working-directory: react-stream-ai-assistant
  #       vercel-args: '--prod'
  
  # deploy-backend-fly:
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   needs: [backend-tests]
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   
  #   - name: Setup Fly CLI
  #     uses: superfly/flyctl-actions/setup-flyctl@master
  #   
  #   - name: Deploy to Fly.io
  #     run: flyctl deploy --remote-only
  #     env:
  #       FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  
  # deploy-docker:
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   needs: [backend-tests, frontend-tests]
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #   
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   
  #   - name: Build and push backend
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: ./nodejs-ai-assistant
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/ai-chat-backend:latest
  #   
  #   - name: Build and push frontend
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: ./react-stream-ai-assistant
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/ai-chat-frontend:latest